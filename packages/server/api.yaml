swagger: '2.0'
info:
  description: SARA REST API definition
  version: 1.0.0
  title: SARA (Sales Reporter Applicaltion) REST services
  contact:
    email: miller.gonzalez@globant.com

paths:
  /api-status:
    get:
      x-swagger-router-controller: status
      operationId: "getInfo"
      summary: Returns 200 if the api is running
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'

  #FORMS  
  /program:
    get:
      x-swagger-router-controller: program
      operationId: "getPrograms"
      summary: Returns the list of probrams.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/ProgramListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
  
  /region:
    get:
      operationId: "getRegion"
      summary: Returns the list of regions.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/RegionListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
                   
  /format:
    get:
      x-swagger-router-controller: format
      operationId: "getFormats"
      summary: Returns the list of formats.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/FormatListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'

  /tactic:
    get:
      x-swagger-router-controller: tactic
      operationId: "getTactics"
      summary: Returns the list of tactics.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/TacticListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
 
  #REPORTS
  /activity:  
    post:
      operationId: "createActivity"
      summary: Create a new activity
      description: N/A
      parameters:
      - name: body
        in: body
        schema:
          $ref: '#/definitions/ActivityCreateBody'
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
        default:
          description: Invalid request.
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'

  /mandatory:  
    post:
      x-swagger-router-controller: user
      operationId: "doLogin"
      summary: Returns login ok if the pwd and user match
      description: Used temporaly for the login endpoint
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/DoLoginBody'
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'

        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'

#RESPONSES
definitions:
  #RESPONSES
  ActivityCreateBody:
    description: Body used for creating a new activity.
    type: object
    properties:
      program:
        type: string
      title:
        type: string
      format:
        type: string
      abstract:
        type: string
      region:
        type: string
      start_date:
        type: string
      end_date:
        type: string
      asset:
        type: string
    required: ['program', 'title', 'format', 'abstract', 'region', 'start_date', 'end_date', 'asset']

  ProgramListResponse:
    description: A list of programs.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Program'
                    
  FormatListResponse:
    description: A list of formats.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Format'

  TacticListResponse:
    description: A list of tactics.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Tactic'
          
  RegionListResponse:
    description: A list of users.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Region'

  ResponseStatus:
    type: object
    properties:
      info:
        description: The object containing the HTTP status for the response.
        type: object
        properties:
          status:
            description: The numeric HTTP status code for the response.
            type: integer
            example: Status HTTP Code
          code:
            description: The textual HTTP status code for the response.
            type: string
            example: OK
        required:
          - status
          - code
  
  DoLoginBody:
    description: Body used for creating a new user.
    type: object
    properties:
      username:
        type: string
      password:
        type: string
        
  
  Error:
    properties:
      message:
        type: string
    required:
      - message
  
  #MODELS     
  Program:
    type: object
    properties:
      program_id:
        type: string
      label:
        type: string
        
  Format:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      label:
        type: string

  Tactic:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      label:
        type: string
              
  Region:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      label:
        type: string

  Status:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string
            
schemes: ['http', 'https']
consumes: ['application/json']
produces: ['application/json']

host: localhost:3000
basePath: /api/v1