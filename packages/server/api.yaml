swagger: '2.0'
info:
  description: App SARA REST API definition
  version: 1.0.0
  title: SARA (Sales Reporter Applicaltion) REST services
  contact:
    email: miller.gonzalez@globant.com

paths:
  /api-status:
    get:
      x-swagger-router-controller: status
      operationId: "getInfo"
      summary: Returns 200 if the api is running
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'

  #FORMS  
  /program:
    get:
      x-swagger-router-controller: program
      operationId: "getPrograms"
      summary: Returns the list of probrams.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/ProgramListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
  
  /segment:
    get:
      operationId: "getSegments"
      summary: Returns the list of segments.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/SegmentListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'

  /status:
    get:
      operationId: "getStatus"
      summary: Returns the list of status.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/StatusListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
  
  /target:
    get:
      operationId: "getTargetAudience"
      summary: Returns the list of targets.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/TargetAudienceListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
  
  /region:
    get:
      operationId: "getRegion"
      summary: Returns the list of regions.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/RegionListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
  
  /persona:
    get:
      operationId: "getPersons"
      summary: Returns the list of persons.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/PersonaListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
              
  /team:
    get:
      operationId: "getTeams"
      summary: Returns the list of teams.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/TeamListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
              
  /industry:
    get:
      operationId: "getIndustries"
      summary: Returns the list of Industries.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/IndustryListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
              
  /format:
    get:
      x-swagger-router-controller: format
      operationId: "getFormats"
      summary: Returns the list of formats.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/FormatListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'

  /tactic:
    get:
      x-swagger-router-controller: tactic
      operationId: "getTactics"
      summary: Returns the list of tactics.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/TacticListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
  
  /theme:
    get:
      operationId: "geThemes"
      summary: Returns the list of themes.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/ThemeListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
 
  /customer-area:
    get:
      operationId: "geCustomerAreas"
      summary: Returns the list of customer 360 areas.
      description: This will be used to populate the insert and update dropdowns
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Customer360AreaListResponse'
        default:
          description: Invalid request.
          schema:
            allOf: 
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
 
  #REPORTS
  /mandatory:  
    post:
      operationId: "createMandatory"
      summary: Create a new mandatory
      description: N/A
      parameters:
      - name: body
        in: body
        schema:
          $ref: '#/definitions/MandatoryCreateBody'
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
        default:
          description: Invalid request.
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
              
  /mandatory/{id}:  
    put:
      operationId: "updateMandatory"
      summary: Update mandatory by id given
      description: N/A
      parameters:
      - name: id
        in: path
        description: Given the mandatory id the registry can be updated
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/MandatoryCreateBody'
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
        404:
          description: Not found
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
        default:
          description: Invalid request.
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
    delete:
      operationId: "deletMandatory"
      summary: Delete a mandatory.
      description: N/A
      parameters:
      - name: id
        in: path
        description: Given the mandatory id the registry can be deleted
        required: true
        type: string
      responses:
        202:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
        default:
          description: Invalid request.
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'  
  
  /mandatory1:
    get:
      operationId: "getMandatory1List"
      summary: List the mandatory 1 list
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Mandatory1AreaListResponse'
        default:
          description: Invalid request.
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
              
  /mandatory2:
    get:
      operationId: "getMandatory2List"
      summary: List the mandatory 1 list
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Mandatory2AreaListResponse'
        default:
          description: Invalid request.
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
              
  /mandatory3:
    get:
      operationId: "getMandatory3List"
      summary: List the mandatory 1 list
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Mandatory3AreaListResponse'
        default:
          description: Invalid request.
          schema:
            allOf:
              - $ref: '#/definitions/ResponseStatus'
              - $ref: '#/definitions/Error'
    
definitions:
  #RESPONSES
  MandatoryCreateBody:
    description: Body used for creating a new user.
    type: object
    properties:
      theme:
        type: string
      program:
        type: string
      title:
        type: string
      format:
        type: string
      persona:
        type: string
      abstract:
        type: string
      region:
        type: string
      start_date:
        type: string
      end_date:
        type: string
      highlights:
        type: string
      asset:
        type: string
    required: ['theme', 'program', 'title', 'format', 'persona', 'abstract', 'region', 'start_date', 'end_date', 'highlights', 'asset']
  
  ProgramListResponse:
    description: A list of programs.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Program'
    
  SegmentListResponse:
    description: A list of users.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Segment'
    
  StatusListResponse:
    description: A list of users.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Status'
          
  TargetAudienceListResponse:
    description: A list of users.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/TargetAudience'
  
  RegionListResponse:
    description: A list of users.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Region'
  
  PersonaListResponse:
    description: A list of users.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Persona'
          
  TeamListResponse:
    description: A list of users.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Team'
          
  IndustryListResponse:
    description: A list of users.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Industry'
          
  FormatListResponse:
    description: A list of formats.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Format'

  TacticListResponse:
    description: A list of tactics.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Tactic'
          
  ThemeListResponse:
    description: A list of users.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Theme'
  
  Customer360AreaListResponse:
    description: A list of users.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Customer360Area'
          
  Mandatory1AreaListResponse:
    description: A list of users.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/MandatoryView1'
  
  Mandatory2AreaListResponse:
    description: A list of users.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/MandatoryView2'
          
  Mandatory3AreaListResponse:
    description: A list of users.
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/MandatoryView3'
  
  ResponseStatus:
    type: object
    properties:
      info:
        description: The object containing the HTTP status for the response.
        type: object
        properties:
          status:
            description: The numeric HTTP status code for the response.
            type: integer
            example: Status HTTP Code
          code:
            description: The textual HTTP status code for the response.
            type: string
            example: OK
        required:
          - status
          - code
  
  Error:
    properties:
      message:
        type: string
    required:
      - message
  
  #MODELS
  MandatoryView1:
    type: object
    properties:
      theme:
        type: string
      program:
        type: string
      title:
        type: string
      format:
        type: string
      persona:
        type: string
      abstract:
        type: string
      region:
        type: string
      start_date:
        type: string
      end_date:
        type: string
      highlights:
        type: string
      asset:
        type: string
  
  MandatoryView2:
    type: object
    properties:
      businessPlatformChange:
        type: string
      program:
        type: string
      title:
        type: string
      format:
        type: string
      persona:
        type: string
      abstract:
        type: string
      region:
        type: string
      start_date:
        type: string
      end_date:
        type: string
      highlights:
        type: string
      asset:
        type: string
  
  MandatoryView3:
    type: object
    properties:
      ia:
        type: string
      program:
        type: string
      title:
        type: string
      format:
        type: string
      persona:
        type: string
      abstract:
        type: string
      region:
        type: string
  
  Theme:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string
        
  Program:
    type: object
    properties:
      program_id:
        type: string
      label:
        type: string
        
  Format:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      label:
        type: string

  Tactic:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      label:
        type: string
        
  Customer360Area:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string
        
  Industry:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string
        
  Team:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string
        
  Persona:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string
        
  Region:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      label:
        type: string
        
  TargetAudience:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string
  
  Status:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string
  
  Segment:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string
  
            
schemes: ['http', 'https']
consumes: ['application/json']
produces: ['application/json']

host: localhost:3000
basePath: /api/v1