{"version":3,"sources":["containers/Login/index.js","utils/data.js","components/Modal/index.js","components/Nav/index.js","components/DataRow/index.js","components/DataTable/index.js","components/Spinner/index.js","containers/Admin/index.js","App.js","serviceWorker.js","index.js"],"names":["Login","history","useHistory","className","class","src","alt","onSubmit","e","preventDefault","push","login","htmlFor","type","required","href","data","theme","program","title","format","persona","abstract","region","startDate","endDate","results","asset","Modal","accept","toggleCreateRowModal","useState","row","setRow","handleCHange","target","name","value","role","tabIndex","aria-labelledby","aria-modal","aria-describedby","onClick","aria-hidden","xlinkHref","id","onChange","Nav","addRow","isModalShowed","isClicked","setIsClicked","to","aria-haspopup","style","right","top","DataRow","index","deleteRow","aria-selected","scope","aria-label","DataTable","aria-multiselectable","aria-sort","max","min","width","map","i","key","Spinner","height","Admin","useEffect","handleLoad","loading","setLoading","dummydata","setData","setisModalShowed","setTimeout","bool","filterData","filter","idx","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6f5ae476.chunk.js","sourcesContent":["import React from 'react';\n\nimport { useHistory  } from 'react-router-dom'\n\nconst Login = () => {\n\n    const history = useHistory();\n\n\n    const login = e => {\n      e.preventDefault();\n      history.push('/admin')\n    }\n\n    return(\n      <section className=\"slds-heigh_100vh slds-grid slds-wrap slds-align_absolute-center\">\n        <div className=\"slds-flex_column\">\n          <img class=\"slds-m-bottom_medium slds-img-width_15rem\" src=\"assets/images/logo.svg\" alt=\"Salesforce logo\"/>\n          <article className=\"slds-card\">\n            <div className=\"slds-card__body slds-card__body_inner slds-login-card-body\">\n              <form onSubmit={e => login(e)}>\n                <div className=\"slds-form-element\">\n                  <label className=\"slds-form-element__label\" htmlFor=\"text-input-id-1\">\n                    Username\n                  </label>\n                  <div className=\"slds-form-element__control\">\n                    <input type=\"text\" required className=\"slds-input\" />\n                  </div>\n                </div>\n                <div className=\"slds-form-element slds-m-top_small\">\n                  <label className=\"slds-form-element__label\" htmlFor=\"text-input-id-1\">\n                    Password\n                  </label>\n                  <div className=\"slds-form-element__control\">\n                    <input type=\"password\" required className=\"slds-input\" />\n                  </div>\n                </div>\n                <button type=\"submit\" className=\"slds-button slds-button_brand slds-button_stretch slds-m-top_small\">Login</button>\n              </form>\n            </div>\n            <footer className=\"slds-card__footer\">\n              <a className=\"slds-card__footer-action\" href=\"#\">¿Forgot password?\n              </a>\n            </footer>\n          </article>\n        </div>\n      </section>\n    )\n}\n\nexport default Login;","const data = [\n    {\n        theme: 'Stablise Your Company',\n        program: 'Work.com',\n        title: '#feelgoodfridays social series',\n        format: 'Organic Social',\n        persona: 'All',\n        abstract: '\"To help infuse our Salesforce community with joy and inspiration, today we launched our #FeelGoodFridays series across our social channels. 🙌The aim of this series is to share how our community is keeping spirits high with positive vibes every week. Our first #FeelGoodFriday story is about one of our education Trailblazers, A Team Tuition. No doubt, many of us can relate to Hayden’s story of being stereotyped at school as a particular type of learner. Well, Hayden has turned this on its head with his business A Team Tuition.\"',\n        region: 'APAC',\n        startDate: '2020-01-07',\n        endDate: '2020-06-30',\n        results: '',\n        asset: ''\n    }\n];\n\nexport default data;","import React, { Fragment, useState } from 'react';\n\nconst Modal = ({\n  accept,\n  toggleCreateRowModal,\n  type,\n  onSubmit\n}) => {\n\n  const [row, setRow] = useState({});\n\n  const handleCHange = e => setRow({...row, [e.target.name]: e.target.value});\n\n  return(\n    <Fragment>\n      <section role=\"dialog\" tabIndex={-1} aria-labelledby=\"modal-heading-01\" aria-modal=\"true\" aria-describedby=\"modal-content-id-1\" className=\"slds-modal slds-fade-in-open\">\n        <div className=\"slds-modal__container\">\n          <header className=\"slds-modal__header\">\n            <button onClick={() => toggleCreateRowModal(false)} className=\"slds-button slds-button_icon slds-modal__close slds-button_icon-inverse\" title=\"Close\">\n              <svg className=\"slds-button__icon slds-button__icon_large\" aria-hidden=\"true\">\n                <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#close\" />\n              </svg>\n              <span className=\"slds-assistive-text\">Close</span>\n            </button>\n            <h2 id=\"modal-heading-01\" className=\"slds-modal__title slds-hyphenate\">New row</h2>\n          </header>\n          <div className=\"slds-modal__content slds-p-around_medium\">\n            <form onSubmit={e => onSubmit(e, row)}>\n              <div className=\"slds-form-element\">\n                <label className=\"slds-form-element__label\">Theme</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} className=\"slds-input\" name=\"theme\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Program</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} className=\"slds-input\" name=\"program\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Title</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} className=\"slds-input\" name=\"title\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Format</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} className=\"slds-input\" name=\"format\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Persona</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} className=\"slds-input\" name=\"persona\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Abstract</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} className=\"slds-input\" name=\"abstract\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Region</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} className=\"slds-input\" name=\"region\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Start date</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"date\" onChange={handleCHange} className=\"slds-input\" name=\"startDate\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">End date</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"date\" onChange={handleCHange} className=\"slds-input\" name=\"endDate\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Results</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} className=\"slds-input\" name=\"results\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Asset</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} className=\"slds-input\" name=\"asset\" />\n                </div>\n              </div>\n              <div class=\"slds-m-top_small\">\n                <button onClick={() => toggleCreateRowModal(false)} className=\"slds-button slds-button_neutral\">Cancel</button>\n                <button type=\"submit\" className=\"slds-button slds-button_brand\">{accept}</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n      <div className=\"slds-backdrop slds-backdrop_open\" />\n    </Fragment>\n  )\n}\n\nexport default Modal;","import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Modal from '../Modal';\n\nconst Nav = ({\n  addRow,\n  isModalShowed,\n  toggleCreateRowModal\n}) => {\n\n  const [isClicked, setIsClicked ] = useState(false);\n\n  const handleClick = () => setIsClicked(!isClicked);\n\n  return(\n    <Fragment>\n      {isModalShowed && <Modal onSubmit={addRow} accept='Create row' toggleCreateRowModal={toggleCreateRowModal} />}\n      <header className=\"slds-global-header_container\">\n        <a href=\"javascript:void(0);\" className=\"slds-assistive-text slds-assistive-text_focus\">Skip to Navigation</a>\n        <a href=\"javascript:void(0);\" className=\"slds-assistive-text slds-assistive-text_focus\">Skip to Main Content</a>\n        <div className=\"slds-global-header slds-grid slds-grid_align-spread\">\n          <div className=\"slds-global-header__item\">\n            <Link to=\"/admin\"> \n              <div className=\"slds-global-header__logo\" />\n            </Link>\n          </div>\n          <div className=\"slds-global-header__item\">\n            <ul className=\"slds-global-actions\">\n              <li className=\"slds-global-actions__item\">\n                <div className=\"slds-dropdown-trigger slds-dropdown-trigger_click\">\n                  <button onClick={() => toggleCreateRowModal(!isModalShowed)} className=\"slds-button slds-button_icon slds-button_icon slds-button_icon-container slds-button_icon-small slds-global-actions__task slds-global-actions__item-action\" aria-haspopup=\"true\" title=\"Create new row\">\n                    <svg className=\"slds-button__icon\" aria-hidden=\"true\">\n                      <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#add\" />\n                    </svg>\n                    <span className=\"slds-assistive-text\">Create new row</span>\n                  </button>\n                </div>\n              </li>\n              <li className=\"slds-global-actions__item\">\n                <div className={`slds-dropdown-trigger slds-dropdown-trigger_click ${isClicked && 'slds-is-open'}`}>\n                  <button onClick={handleClick} className=\"slds-button slds-global-actions__avatar slds-global-actions__item-action\" title=\"person name\" aria-haspopup=\"true\">\n                    <span className=\"slds-avatar slds-avatar_circle slds-avatar_medium\">\n                      <img alt=\"Person name\" src=\"/assets/images/avatar1.jpg\" title=\"User avatar\" />\n                    </span>\n                  </button>\n                  <div className=\"slds-dropdown slds-dropdown_right slds-nubbin_top-right\" style={{right: '-0.6rem', top: '2.3rem'}}>\n                    <ul className=\"slds-dropdown__list\" role=\"menu\">\n                      <li className=\"slds-dropdown__item\" role=\"presentation\">\n                        <a href=\"#\" role=\"menuitem\" tabIndex={0}>\n                          <span className=\"slds-truncate\" title=\"Log out\">\n                            <Link to='/'>Edit profile</Link>\n                          </span>\n                        </a>\n                      </li>\n                    </ul>\n                    <footer className=\"slds-popover__footer\">\n                      <ul>\n                        <li>\n                          <a href=\"/\" className=\"slds-button slds-button_reset slds-p-vertical_xx-small slds-size_1-of-1\">\n                            <svg className=\"slds-button__icon slds-button__icon_left\" aria-hidden=\"true\">\n                              <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#logout\" />\n                            </svg>Log out</a>\n                        </li>\n                      </ul>\n                    </footer>\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </header>\n    </Fragment>\n  )\n}\n\nexport default Nav;","import React, { useState } from 'react';\n\nconst DataRow = ({\n  theme,\n  program, \n  title, \n  format, \n  persona, \n  abstract, \n  region, \n  startDate, \n  endDate,\n  results, \n  asset,\n  index,\n  deleteRow\n}) => {\n\n  const [isClicked, setIsClicked ] = useState(false);\n\n  const handleClick = () => {\n    setIsClicked(!isClicked)\n  }\n\n  return(\n    <tr aria-selected=\"false\" className=\"slds-hint-parent\">\n      <th scope=\"row\">\n        <div className=\"slds-truncate\" title={theme}>{theme}</div>\n      </th>\n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={title}>{program}</div>\n      </td>\n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={title}>{title}</div>\n      </td>\n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={format}>{format}</div>\n      </td>\n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={persona}>{persona}</div>\n      </td>\n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={abstract}>{abstract}</div>\n      </td>\n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={region}>{region}</div>\n      </td>\n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={startDate}>{startDate}</div>\n      </td>\n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={endDate}>{endDate}</div>\n      </td>\n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={results}>{results}</div>\n      </td>\n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={asset}>{asset}</div>\n      </td>\n      <td role=\"gridcell\">\n        <button onClick={handleClick} className=\"slds-button slds-button_icon slds-button_icon-border-filled\" aria-haspopup=\"true\" title=\"Show More\">\n          <svg className=\"slds-button__icon\" aria-hidden=\"true\">\n            <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#down\" />\n          </svg>\n          <span className=\"slds-assistive-text\">Show More</span>\n        </button>\n        { isClicked && <div className=\"slds-dropdown slds-dropdown_right slds-dropdown_small\">\n          <ul className=\"slds-dropdown__list\" role=\"menu\" aria-label=\"Show More\">\n            <li className=\"slds-dropdown__item\" role=\"presentation\">\n              <a role=\"menuitem\">\n                <span className=\"slds-truncate\" title=\"Kanban Board\">Edit</span>\n                <svg className=\"slds-icon slds-icon_x-small slds-icon-text-default slds-m-left_small slds-shrink-none\" aria-hidden=\"true\">\n                  <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#edit\" />\n                </svg>\n              </a>\n            </li>\n            <li className=\"slds-dropdown__item\" role=\"presentation\">\n              <a onClick={() => deleteRow(index)} role=\"menuitem\">\n                <span className=\"slds-truncate\" title=\"List View\">Delete</span>\n                <svg className=\"slds-icon slds-icon_x-small slds-icon-text-default slds-m-left_small slds-shrink-none\" aria-hidden=\"true\">\n                  <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#delete\" />\n                </svg>\n              </a>\n            </li>\n          </ul>\n        </div>\n        }\n      </td>\n    </tr>\n  )\n}\n\nexport default DataRow;","import React, { useState } from 'react';\n\nimport DataRow from '../DataRow';\n\nconst DataTable = ({\n  data,\n  deleteRow\n}) => {\n\n  return(\n    <table aria-multiselectable=\"true\" className=\"slds-table slds-table_bordered slds-table_fixed-layout slds-table_resizable-cols\" role=\"grid\">\n      <thead>\n        <tr className=\"slds-line-height_reset\">\n          <th aria-label=\"Theme\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n            <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n              <span className=\"slds-assistive-text\">Sort by: </span>\n              <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                <span className=\"slds-truncate\" title=\"Theme\">Theme</span>\n                <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                  <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                    <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                  </svg>\n                </span>\n              </div>\n            </a>\n            <div className=\"slds-resizable\">\n              <input type=\"range\" aria-label=\"Name column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-533\" max={1000} min={20} tabIndex={0} />\n              <span className=\"slds-resizable__handle\">\n                <span className=\"slds-resizable__divider\" />\n              </span>\n            </div>\n          </th>\n          <th aria-label=\"Program\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n            <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n              <span className=\"slds-assistive-text\">Sort by: </span>\n              <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                <span className=\"slds-truncate\" title=\"Program\">Program</span>\n                <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                  <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                    <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                  </svg>\n                </span>\n              </div>\n            </a>\n            <div className=\"slds-resizable\">\n              <input type=\"range\" aria-label=\"Account Name column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-534\" max={1000} min={20} tabIndex={0} />\n              <span className=\"slds-resizable__handle\">\n                <span className=\"slds-resizable__divider\" />\n              </span>\n            </div>\n          </th>\n          <th aria-label=\"Title\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n            <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n              <span className=\"slds-assistive-text\">Sort by: </span>\n              <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                <span className=\"slds-truncate\" title=\"Title\">Title</span>\n                <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                  <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                    <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                  </svg>\n                </span>\n              </div>\n            </a>\n            <div className=\"slds-resizable\">\n              <input type=\"range\" aria-label=\"Close Date column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-535\" max={1000} min={20} tabIndex={0} />\n              <span className=\"slds-resizable__handle\">\n                <span className=\"slds-resizable__divider\" />\n              </span>\n            </div>\n          </th>\n          <th aria-label=\"Format\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n            <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n              <span className=\"slds-assistive-text\">Sort by: </span>\n              <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                <span className=\"slds-truncate\" title=\"Format\">Format</span>\n                <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                  <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                    <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                  </svg>\n                </span>\n              </div>\n            </a>\n            <div className=\"slds-resizable\">\n              <input type=\"range\" aria-label=\"Stage column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-536\" max={1000} min={20} tabIndex={0} />\n              <span className=\"slds-resizable__handle\">\n                <span className=\"slds-resizable__divider\" />\n              </span>\n            </div>\n          </th>\n          <th aria-label=\"Persona\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n            <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n              <span className=\"slds-assistive-text\">Sort by: </span>\n              <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                <span className=\"slds-truncate\" title=\"Persona\">Persona</span>\n                <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                  <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                    <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                  </svg>\n                </span>\n              </div>\n            </a>\n            <div className=\"slds-resizable\">\n              <input type=\"range\" aria-label=\"Confidence column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-537\" max={1000} min={20} tabIndex={0} />\n              <span className=\"slds-resizable__handle\">\n                <span className=\"slds-resizable__divider\" />\n              </span>\n            </div>\n          </th>\n          <th aria-label=\"Abstract\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n            <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n              <span className=\"slds-assistive-text\">Sort by: </span>\n              <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                <span className=\"slds-truncate\" title=\"Abstract\">Abstract</span>\n                <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                  <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                    <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                  </svg>\n                </span>\n              </div>\n            </a>\n            <div className=\"slds-resizable\">\n              <input type=\"range\" aria-label=\"Amount column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-538\" max={1000} min={20} tabIndex={0} />\n              <span className=\"slds-resizable__handle\">\n                <span className=\"slds-resizable__divider\" />\n              </span>\n            </div>\n          </th>\n          <th aria-label=\"Region\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n            <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n              <span className=\"slds-assistive-text\">Sort by: </span>\n              <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                <span className=\"slds-truncate\" title=\"Region\">Region</span>\n                <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                  <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                    <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                  </svg>\n                </span>\n              </div>\n            </a>\n            <div className=\"slds-resizable\">\n              <input type=\"range\" aria-label=\"Contact column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-539\" max={1000} min={20} tabIndex={0} />\n              <span className=\"slds-resizable__handle\">\n                <span className=\"slds-resizable__divider\" />\n              </span>\n            </div>\n          </th>\n          <th aria-label=\"Start date\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n            <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n              <span className=\"slds-assistive-text\">Sort by: </span>\n              <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                <span className=\"slds-truncate\" title=\"Start date\">Start date</span>\n                <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                  <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                    <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                  </svg>\n                </span>\n              </div>\n            </a>\n            <div className=\"slds-resizable\">\n              <input type=\"range\" aria-label=\"Contact column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-539\" max={1000} min={20} tabIndex={0} />\n              <span className=\"slds-resizable__handle\">\n                <span className=\"slds-resizable__divider\" />\n              </span>\n            </div>\n          </th>\n          <th aria-label=\"End date\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n            <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n              <span className=\"slds-assistive-text\">Sort by: </span>\n              <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                <span className=\"slds-truncate\" title=\"End date\">End date</span>\n                <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                  <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                    <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                  </svg>\n                </span>\n              </div>\n            </a>\n            <div className=\"slds-resizable\">\n              <input type=\"range\" aria-label=\"Contact column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-539\" max={1000} min={20} tabIndex={0} />\n              <span className=\"slds-resizable__handle\">\n                <span className=\"slds-resizable__divider\" />\n              </span>\n            </div>\n          </th>\n          <th aria-label=\"Results\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n            <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n              <span className=\"slds-assistive-text\">Sort by: </span>\n              <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                <span className=\"slds-truncate\" title=\"Results\">Results</span>\n                <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                  <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                    <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                  </svg>\n                </span>\n              </div>\n            </a>\n            <div className=\"slds-resizable\">\n              <input type=\"range\" aria-label=\"Contact column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-539\" max={1000} min={20} tabIndex={0} />\n              <span className=\"slds-resizable__handle\">\n                <span className=\"slds-resizable__divider\" />\n              </span>\n            </div>\n          </th>\n          <th aria-label=\"Asset\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n            <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n              <span className=\"slds-assistive-text\">Sort by: </span>\n              <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                <span className=\"slds-truncate\" title=\"Asset\">Asset</span>\n                <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                  <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                    <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                  </svg>\n                </span>\n              </div>\n            </a>\n            <div className=\"slds-resizable\">\n              <input type=\"range\" aria-label=\"Contact column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-539\" max={1000} min={20} tabIndex={0} />\n              <span className=\"slds-resizable__handle\">\n                <span className=\"slds-resizable__divider\" />\n              </span>\n            </div>\n          </th>\n          <th className scope=\"col\" style={{width: '3.25rem'}}>\n            <div className=\"slds-truncate slds-assistive-text\" title=\"Actions\">Actions</div>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          data.map((e,i) => <DataRow deleteRow={deleteRow} index={i} {...e} key={i} />)\n        }\n      </tbody>\n    </table>\n  )\n}\n\nexport default DataTable;","import React, { Fragment, useState } from 'react';\n\nconst Spinner = () => {\n\n\n  return(\n    <div className=\"demo-only\" style={{height: '6rem'}}>\n      <div className=\"slds-spinner_container\">\n        <div role=\"status\" className=\"slds-spinner slds-spinner_medium slds-spinner_brand\">\n          <span className=\"slds-assistive-text\">Loading</span>\n          <div className=\"slds-spinner__dot-a\" />\n          <div className=\"slds-spinner__dot-b\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Spinner;","import React, { useState, useEffect } from 'react';\nimport dummydata from '../../utils/data';\n\nimport Nav from '../../components/Nav';\nimport DataTable from '../../components/DataTable';\nimport Spinner from '../../components/Spinner';\n\nconst Admin = () => {\n\n  useEffect(() => {\n    handleLoad();\n  });\n\n  let [loading, setLoading] = useState(true);\n  let [data, setData] = useState(dummydata);\n  let [isModalShowed, setisModalShowed] = useState(false);\n\n  const handleLoad = () => {\n    setTimeout(() => {\n      setLoading(false)\n    }, 2000)\n  }\n\n  const addRow = (e, row) => {\n    e.preventDefault();\n    setData([...data, row]);\n    toggleCreateRowModal(false);\n  }\n\n  const deleteRow = i => {\n    let filterData = data.filter((row, idx) => idx !== i);\n    setData(filterData);\n  }\n\n  const toggleCreateRowModal = bool => {\n    setisModalShowed(bool);\n  }\n\n  if(loading) {\n    return <Spinner />\n  } else {\n    return(\n      <section class=\"slds-grid slds-wrap\">\n        <Nav addRow={addRow} isModalShowed={isModalShowed} toggleCreateRowModal={toggleCreateRowModal} />\n        <div class=\"slds-grid slds-wrap slds-p-around_small\">\n          <div class=\"slds-col slds-size_12-of-12\">\n            <DataTable data={data} deleteRow={deleteRow} />\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default Admin;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Login from './containers/Login';\nimport Admin from './containers/Admin';\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route exact path='/' component={Login} />\n      <Route exact path='/admin' component={Admin} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}