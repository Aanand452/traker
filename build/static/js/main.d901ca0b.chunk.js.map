{"version":3,"sources":["utils/data.js","containers/Login/index.js","components/Nav/index.js","components/DataRow/index.js","components/Pager/index.js","components/DataTable/index.js","components/Spinner/index.js","components/Modal/index.js","components/Notification/index.js","components/ProgressBar/index.js","components/Alert/index.js","containers/Mandatory1/index.js","containers/Mandatory2/index.js","containers/Mandatory3/index.js","App.js","serviceWorker.js","index.js"],"names":["Login","history","useHistory","className","class","src","alt","onSubmit","e","preventDefault","push","login","htmlFor","type","required","href","programs","themes","regions","dataModel","theme","program","title","format","persona","abstract","region","startDate","endDate","results","asset","data","i","Math","round","random","length","row","withRouter","addRow","toggleRowModal","addFile","handleAlert","match","useState","isClicked","setIsClicked","to","role","path","onClick","aria-haspopup","aria-hidden","xlinkHref","onChange","accept","id","aria-labelledby","style","right","top","DataRow","index","deleteRow","editRow","hiddenCols","handleClick","aria-selected","scope","aria-label","Pager","DataTable","aria-multiselectable","aria-sort","tabIndex","max","min","startDae","width","map","key","Spinner","height","Modal","values","idx","setRow","handleCHange","target","name","value","aria-modal","aria-describedby","defaultValue","Notification","text","aria-live","aria-atomic","ProgressBar","progress","aria-valuemin","aria-valuemax","aria-valuenow","Alert","icon","Mandatory","loading","setLoading","dummydata","setData","active","notification","setNotification","percentage","setProgress","alert","setAlert","useEffect","handleLoad","modal","setModal","setTimeout","showNotification","prev","setInterval","handleProgress","interval","clearInterval","filterData","filter","editData","splice","App","exact","component","Mandatory1","Mandatory2","Mandatory3","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d901ca0b.chunk.js","sourcesContent":["var programs = [\n  'Artificial Intelligence',\n  'Business as a Platform for Change',\n  'Customer Engagement',\n  'Digital Transformation',\n  'Future of Work',\n  'Grow Your Business',\n  'Reopen Your Workplace',\n  'Stablise Your Company'\n];\n\nvar themes = [\n  '\"State of\" Research',\n  '#FeelGoodFriday',\n  '1 Million Conversations',\n  'Career Series',\n  'CSG- Ask an Expert (Success)',\n  'CSG- Circles of Success',\n  'CSG- How To (Success)',\n  'CSG- Lightning Adoption (Success)',\n  'Customer Engagement',\n  'Database Health',\n  'Digital Transformation',\n  'Employee Engagement',\n  'Future of Work',\n  'Getting Started (Success)',\n  'Industries in Dynamic Times',\n  'Leading Through Change',\n  'Reimagine your Path to Growth (SMB)',\n  'Salesforce CARE',\n  'Salesforce Culture',\n  'Salesforce Live for Financial Services',\n  'Salesforce Live for Retail',\n  'Salesforce Live: Asia ',\n  'Salesforce Live: Australia & New Zealand',\n  'Small Business Relief',\n  'Work.com'\n];\nvar regions = [\n  'ANZ',\n  'APAC',\n  'ASEAN',\n  'GCR',\n  'INDIA'\n];\n\nlet dataModel = {\n  theme: 'Stablise Your Company',\n  program: 'Work.com',\n  title: '',\n  format: 'Organic Social',\n  persona: 'All',\n  abstract: '\"To help infuse our Salesforce community with joy and inspiration, today we launched our #FeelGoodFridays series across our social channels. 🙌The aim of this series is to share how our community is keeping spirits high with positive vibes every week. Our first #FeelGoodFriday story is about one of our education Trailblazers, A Team Tuition. No doubt, many of us can relate to Hayden’s story of being stereotyped at school as a particular type of learner. Well, Hayden has turned this on its head with his business A Team Tuition.\"',\n  region: 'APAC',\n  startDate: '2020-01-07',\n  endDate: '2020-06-30',\n  results: '',\n  asset: ''\n};\n\n\nlet data = [];\n\nfor(var i = 0; i < 15; i++){\n  let theme = themes[Math.round(Math.random() * themes.length)];\n  let region = regions[Math.round(Math.random() * regions.length)];\n  let program = programs[Math.round(Math.random() * programs.length)];\n  \n  let row = {...dataModel};\n  \n  row.theme = theme;\n  row.region = region;\n  row.program = program;\n  \n  data.push(row);\n}  \n\nexport default data;","import React from 'react';\n\nimport { useHistory  } from 'react-router-dom'\n\nconst Login = () => {\n\n    const history = useHistory();\n\n\n    const login = e => {\n      e.preventDefault();\n      history.push('/admin')\n    }\n\n    return(\n      <section className=\"slds-heigh_100vh slds-grid slds-wrap slds-align_absolute-center\">\n        <div className=\"slds-flex_column\">\n          <img class=\"slds-m-bottom_medium slds-img-width_15rem\" src=\"assets/images/logo.svg\" alt=\"Salesforce logo\"/>\n          <article className=\"slds-card\">\n            <div className=\"slds-card__body slds-card__body_inner slds-login-card-body\">\n              <form onSubmit={e => login(e)}>\n                <div className=\"slds-form-element\">\n                  <label className=\"slds-form-element__label\" htmlFor=\"text-input-id-1\">\n                    Username\n                  </label>\n                  <div className=\"slds-form-element__control\">\n                    <input type=\"text\" required className=\"slds-input\" />\n                  </div>\n                </div>\n                <div className=\"slds-form-element slds-m-top_small\">\n                  <label className=\"slds-form-element__label\" htmlFor=\"text-input-id-1\">\n                    Password\n                  </label>\n                  <div className=\"slds-form-element__control\">\n                    <input type=\"password\" required className=\"slds-input\" />\n                  </div>\n                </div>\n                <button type=\"submit\" className=\"slds-button slds-button_brand slds-button_stretch slds-m-top_small\">Login</button>\n              </form>\n            </div>\n            <footer className=\"slds-card__footer\">\n              <a className=\"slds-card__footer-action\" href=\"#\">¿Forgot password?\n              </a>\n            </footer>\n          </article>\n        </div>\n      </section>\n    )\n}\n\nexport default Login;","import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst Nav = ({\n  addRow,\n  toggleRowModal,\n  addFile,\n  handleAlert,\n  match\n}) => {\n  \n  const [isClicked, setIsClicked ] = useState(false);\n  const handleClick = () => setIsClicked(!isClicked);\n\n  return(\n    <Fragment>\n      <header className=\"slds-global-header_container\">\n        <a href=\"javascript:void(0);\" className=\"slds-assistive-text slds-assistive-text_focus\">Skip to Navigation</a>\n        <a href=\"javascript:void(0);\" className=\"slds-assistive-text slds-assistive-text_focus\">Skip to Main Content</a>\n        <div className=\"slds-global-header slds-grid slds-grid_align-spread\">\n          <div className=\"slds-global-header__item\">\n            <Link to=\"/admin\"> \n              <div className=\"slds-global-header__logo\" />\n            </Link>\n            <div className=\"slds-context-bar\">\n              <nav className=\"slds-context-bar__secondary\" role=\"navigation\">\n                <ul className=\"slds-grid\">\n                  <li className={`slds-context-bar__item ${match.path === \"/mandatory-1\" ? \"slds-is-active\" : \"\"}`}>\n                    <Link to=\"/mandatory-1\" className=\"slds-context-bar__label-action\" title=\"Mandatory 1\">\n                      <span class=\"slds-truncate\" title=\"Mandatory 1\">Mandatory 1</span>\n                    </Link>\n                  </li>\n                  <li className={`slds-context-bar__item ${match.path === \"/mandatory-2\" ? \"slds-is-active\" : \"\"}`}>\n                    <Link to=\"/mandatory-2\" class=\"slds-context-bar__label-action\" title=\"Mandatory 2\">\n                      <span class=\"slds-truncate\" title=\"Mandatory 2\">Mandatory 2</span>\n                    </Link>\n                  </li>\n                  <li className={`slds-context-bar__item ${match.path === \"/mandatory-3\" ? \"slds-is-active\" : \"\"}`}>\n                    <Link to=\"/mandatory-3\" class=\"slds-context-bar__label-action\" title=\"Mandatory 3\">\n                      <span class=\"slds-truncate\" title=\"Mandatory 3\">Mandatory 3</span>\n                    </Link>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n          </div>\n          <div className=\"slds-global-header__item\">\n            <ul className=\"slds-global-actions\">\n              <li className=\"slds-global-actions__item\">\n                <div className=\"slds-dropdown-trigger slds-dropdown-trigger_click\">\n                  <button onClick={() => toggleRowModal(true, addRow)} className=\"slds-button slds-button_icon slds-button_icon slds-button_icon-container slds-button_icon-small slds-global-actions__task slds-global-actions__item-action\" aria-haspopup=\"true\" title=\"Create new row\">\n                    <svg className=\"slds-button__icon\" aria-hidden=\"true\">\n                      <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#add\" />\n                    </svg>\n                    <span className=\"slds-assistive-text\">Create new row</span>\n                  </button>\n                </div>\n              </li>\n              <li className=\"slds-global-actions__item\">\n                <div className=\"slds-dropdown-trigger slds-dropdown-trigger_click\">\n                  <div className=\"slds-form-element__control\">\n                    <div className=\"slds-file-selector slds-file-selector_files\">\n                      <input onChange={addFile} type=\"file\" className=\"slds-file-selector__input slds-assistive-text\" accept=\"image/png\" id=\"file-upload-input-01\" aria-labelledby=\"file-selector-primary-label file-selector-secondary-label\" />\n                      <label className=\"slds_cursor-pointer\" htmlFor=\"file-upload-input-01\" id=\"file-selector-secondary-label\"  title=\"Upload CSV\">\n                        <span className=\"slds-button slds-button_icon slds-button_icon slds-button_icon-container slds-button_icon-small slds-global-actions__task slds-global-actions__item-action\">\n                          <svg className=\"slds-button__icon\" aria-hidden=\"true\">\n                            <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#upload\" />\n                          </svg>\n                          <span className=\"slds-assistive-text\">Upload CSV</span>\n                        </span>\n                      </label>\n                    </div>\n                  </div>                  \n                </div>\n              </li>\n              <li className=\"slds-global-actions__item\">\n                <div className=\"slds-dropdown-trigger slds-dropdown-trigger_click\">\n                  <button onClick={() => handleAlert(true, \"CSV file Uploaded wrongly\", \"error\", \"error\")} className=\"slds-button slds-button_icon slds-button_icon slds-button_icon-container slds-button_icon-small slds-global-actions__task slds-global-actions__item-action\" aria-haspopup=\"true\" title=\"Create new row\">\n                    <svg className=\"slds-button__icon\" aria-hidden=\"true\">\n                      <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#error\" />\n                    </svg>\n                    <span className=\"slds-assistive-text\">Error test</span>\n                  </button>\n                </div>\n              </li>\n              <li className=\"slds-global-actions__item\">\n                <div className={`slds-dropdown-trigger slds-dropdown-trigger_click ${isClicked && 'slds-is-open'}`}>\n                  <button onClick={handleClick} className=\"slds-button slds-global-actions__avatar slds-global-actions__item-action\" title=\"person name\" aria-haspopup=\"true\">\n                    <span className=\"slds-avatar slds-avatar_circle slds-avatar_medium\">\n                      <img alt=\"Person name\" src=\"/assets/images/avatar1.jpg\" title=\"User avatar\" />\n                    </span>\n                  </button>\n                  <div className=\"slds-dropdown slds-dropdown_right slds-nubbin_top-right\" style={{right: '-0.6rem', top: '2.3rem'}}>\n                    <footer className=\"slds-popover__footer\">\n                      <ul>\n                        <li>\n                          <a href=\"/\" className=\"slds-button slds-button_reset slds-p-vertical_xx-small slds-size_1-of-1\">\n                            <svg className=\"slds-button__icon slds-button__icon_left\" aria-hidden=\"true\">\n                              <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#logout\" />\n                            </svg>Log out</a>\n                        </li>\n                      </ul>\n                    </footer>\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </header>\n    </Fragment>\n  )\n}\n\nexport default withRouter(Nav);","import React, { useState } from 'react';\n\nconst DataRow = ({\n  theme,\n  program, \n  title, \n  format, \n  persona, \n  abstract, \n  region, \n  startDate, \n  endDate,\n  results, \n  asset,\n  index,\n  deleteRow,\n  editRow,\n  toggleRowModal,\n  hiddenCols\n}) => {\n\n  const [isClicked, setIsClicked ] = useState(false);\n  const row = { theme, program, title, format, persona, abstract, region, startDate, endDate,results, asset };\n\n  const handleClick = () => {\n    setIsClicked(!isClicked);\n  }\n\n  const handleEditRow = () => {\n    handleClick(false);\n    toggleRowModal(true, editRow, row, 'edit', index);\n  }\n\n  return(\n    <tr aria-selected=\"false\" className=\"slds-hint-parent\">\n      { !hiddenCols.theme && \n      <th scope=\"row\">\n        <div className=\"slds-truncate\" title={theme}>{theme}</div>\n      </th>\n      }\n      { !hiddenCols.program && \n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={title}>{program}</div>\n      </td>\n      }\n      { !hiddenCols.title && \n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={title}>{title}</div>\n      </td>\n      }\n      { !hiddenCols.format && \n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={format}>{format}</div>\n      </td>\n      }\n      { !hiddenCols.persona && \n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={persona}>{persona}</div>\n      </td>\n      }\n      { !hiddenCols.abstract && \n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={abstract}>{abstract}</div>\n      </td>\n      }\n      { !hiddenCols.region && \n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={region}>{region}</div>\n      </td>\n      }\n      { !hiddenCols.startDate && \n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={startDate}>{startDate}</div>\n      </td>\n      }\n      { !hiddenCols.endDate && \n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={endDate}>{endDate}</div>\n      </td>\n      }\n      { !hiddenCols.results && \n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={results}>{results}</div>\n      </td>\n      }\n      { !hiddenCols.results && \n      <td role=\"gridcell\">\n        <div className=\"slds-truncate\" title={asset}>{asset}</div>\n      </td>\n      }\n      <td role=\"gridcell\">\n        <button onClick={handleClick} className=\"slds-button slds-button_icon slds-button_icon-border-filled\" aria-haspopup=\"true\" title=\"Show More\">\n          <svg className=\"slds-button__icon\" aria-hidden=\"true\">\n            <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#down\" />\n          </svg>\n          <span className=\"slds-assistive-text\">Show More</span>\n        </button>\n        { isClicked && <div className=\"slds-dropdown slds-dropdown_right slds-dropdown_small\">\n          <ul className=\"slds-dropdown__list\" role=\"menu\" aria-label=\"Show More\">\n            <li className=\"slds-dropdown__item\" role=\"presentation\">\n              <a onClick={handleEditRow} role=\"menuitem\">\n                <span className=\"slds-truncate\" title=\"Kanban Board\">Edit</span>\n                <svg className=\"slds-icon slds-icon_x-small slds-icon-text-default slds-m-left_small slds-shrink-none\" aria-hidden=\"true\">\n                  <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#edit\" />\n                </svg>\n              </a>\n            </li>\n            <li className=\"slds-dropdown__item\" role=\"presentation\">\n              <a onClick={() => deleteRow(index)} role=\"menuitem\">\n                <span className=\"slds-truncate\" title=\"List View\">Delete</span>\n                <svg className=\"slds-icon slds-icon_x-small slds-icon-text-default slds-m-left_small slds-shrink-none\" aria-hidden=\"true\">\n                  <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#delete\" />\n                </svg>\n              </a>\n            </li>\n          </ul>\n        </div>\n        }\n      </td>\n    </tr>\n  )\n}\n\nexport default DataRow;","import React from 'react';\n\nconst Pager = () => {\n  \n\n  return(\n    <div className=\"slds-button-group\" role=\"group\">\n      <div>\n        <button className=\"slds-button slds-button_neutral slds-pager_color slds-button_first\">{'<'}</button>\n      </div>\n      <div>\n        <button className=\"slds-button slds-button_neutral slds-pager_color slds-button_middle\">1</button>\n      </div>\n      <div>\n        <button className=\"slds-button slds-button_neutral slds-pager_color slds-button_middle\">2</button>\n      </div>\n      <div>\n        <button className=\"slds-button slds-button_neutral slds-pager_color slds-button_middle\">3</button>\n      </div>\n      <div>\n        <button className=\"slds-button slds-button_neutral slds-pager_color slds-button_last\">{'>'}</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Pager;","import React, { useState, Fragment } from 'react';\n\nimport DataRow from '../DataRow';\nimport Pager from '../Pager';\n\nconst DataTable = ({\n  data,\n  deleteRow,\n  editRow,\n  toggleRowModal,\n  hiddenCols\n}) => {\n\n  return(\n    <Fragment>\n      <table aria-multiselectable=\"true\" className=\"slds-table slds-table_bordered slds-table_fixed-layout slds-table_resizable-cols\" role=\"grid\">\n        <thead>\n          <tr className=\"slds-line-height_reset\">\n            { !hiddenCols.theme && \n            <th aria-label=\"Theme\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n              <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n                <span className=\"slds-assistive-text\">Sort by: </span>\n                <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                  <span className=\"slds-truncate\" title=\"Theme\">Theme</span>\n                  <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                    <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                      <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                    </svg>\n                  </span>\n                </div>\n              </a>\n              <div className=\"slds-resizable\">\n                <input type=\"range\" aria-label=\"Name column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-533\" max={1000} min={20} tabIndex={0} />\n                <span className=\"slds-resizable__handle\">\n                  <span className=\"slds-resizable__divider\" />\n                </span>\n              </div>\n            </th>\n            }\n            { !hiddenCols.program && \n            <th aria-label=\"Program\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n              <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n                <span className=\"slds-assistive-text\">Sort by: </span>\n                <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                  <span className=\"slds-truncate\" title=\"Program\">Program</span>\n                  <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                    <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                      <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                    </svg>\n                  </span>\n                </div>\n              </a>\n              <div className=\"slds-resizable\">\n                <input type=\"range\" aria-label=\"Account Name column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-534\" max={1000} min={20} tabIndex={0} />\n                <span className=\"slds-resizable__handle\">\n                  <span className=\"slds-resizable__divider\" />\n                </span>\n              </div>\n            </th>\n            }\n            { !hiddenCols.title && \n            <th aria-label=\"Title\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n              <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n                <span className=\"slds-assistive-text\">Sort by: </span>\n                <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                  <span className=\"slds-truncate\" title=\"Title\">Title</span>\n                  <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                    <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                      <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                    </svg>\n                  </span>\n                </div>\n              </a>\n              <div className=\"slds-resizable\">\n                <input type=\"range\" aria-label=\"Close Date column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-535\" max={1000} min={20} tabIndex={0} />\n                <span className=\"slds-resizable__handle\">\n                  <span className=\"slds-resizable__divider\" />\n                </span>\n              </div>\n            </th>\n            }\n            { !hiddenCols.format && \n            <th aria-label=\"Format\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n              <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n                <span className=\"slds-assistive-text\">Sort by: </span>\n                <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                  <span className=\"slds-truncate\" title=\"Format\">Format</span>\n                  <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                    <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                      <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                    </svg>\n                  </span>\n                </div>\n              </a>\n              <div className=\"slds-resizable\">\n                <input type=\"range\" aria-label=\"Stage column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-536\" max={1000} min={20} tabIndex={0} />\n                <span className=\"slds-resizable__handle\">\n                  <span className=\"slds-resizable__divider\" />\n                </span>\n              </div>\n            </th>\n            }\n            { !hiddenCols.persona && \n            <th aria-label=\"Persona\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n              <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n                <span className=\"slds-assistive-text\">Sort by: </span>\n                <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                  <span className=\"slds-truncate\" title=\"Persona\">Persona</span>\n                  <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                    <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                      <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                    </svg>\n                  </span>\n                </div>\n              </a>\n              <div className=\"slds-resizable\">\n                <input type=\"range\" aria-label=\"Confidence column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-537\" max={1000} min={20} tabIndex={0} />\n                <span className=\"slds-resizable__handle\">\n                  <span className=\"slds-resizable__divider\" />\n                </span>\n              </div>\n            </th>\n            }\n            { !hiddenCols.abstract && \n            <th aria-label=\"Abstract\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n              <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n                <span className=\"slds-assistive-text\">Sort by: </span>\n                <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                  <span className=\"slds-truncate\" title=\"Abstract\">Abstract</span>\n                  <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                    <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                      <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                    </svg>\n                  </span>\n                </div>\n              </a>\n              <div className=\"slds-resizable\">\n                <input type=\"range\" aria-label=\"Amount column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-538\" max={1000} min={20} tabIndex={0} />\n                <span className=\"slds-resizable__handle\">\n                  <span className=\"slds-resizable__divider\" />\n                </span>\n              </div>\n            </th>\n            }\n            <th aria-label=\"Region\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n              <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n                <span className=\"slds-assistive-text\">Sort by: </span>\n                <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                  <span className=\"slds-truncate\" title=\"Region\">Region</span>\n                  <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                    <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                      <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                    </svg>\n                  </span>\n                </div>\n              </a>\n              <div className=\"slds-resizable\">\n                <input type=\"range\" aria-label=\"Contact column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-539\" max={1000} min={20} tabIndex={0} />\n                <span className=\"slds-resizable__handle\">\n                  <span className=\"slds-resizable__divider\" />\n                </span>\n              </div>\n            </th>\n            { !hiddenCols.startDae && \n            <th aria-label=\"Start date\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n              <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n                <span className=\"slds-assistive-text\">Sort by: </span>\n                <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                  <span className=\"slds-truncate\" title=\"Start date\">Start date</span>\n                  <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                    <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                      <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                    </svg>\n                  </span>\n                </div>\n              </a>\n              <div className=\"slds-resizable\">\n                <input type=\"range\" aria-label=\"Contact column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-539\" max={1000} min={20} tabIndex={0} />\n                <span className=\"slds-resizable__handle\">\n                  <span className=\"slds-resizable__divider\" />\n                </span>\n              </div>\n            </th>\n            }\n            { !hiddenCols.endDate && \n            <th aria-label=\"End date\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n              <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n                <span className=\"slds-assistive-text\">Sort by: </span>\n                <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                  <span className=\"slds-truncate\" title=\"End date\">End date</span>\n                  <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                    <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                      <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                    </svg>\n                  </span>\n                </div>\n              </a>\n              <div className=\"slds-resizable\">\n                <input type=\"range\" aria-label=\"Contact column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-539\" max={1000} min={20} tabIndex={0} />\n                <span className=\"slds-resizable__handle\">\n                  <span className=\"slds-resizable__divider\" />\n                </span>\n              </div>\n            </th>\n            }\n            { !hiddenCols.results && \n            <th aria-label=\"Results\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n              <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n                <span className=\"slds-assistive-text\">Sort by: </span>\n                <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                  <span className=\"slds-truncate\" title=\"Results\">Results</span>\n                  <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                    <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                      <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                    </svg>\n                  </span>\n                </div>\n              </a>\n              <div className=\"slds-resizable\">\n                <input type=\"range\" aria-label=\"Contact column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-539\" max={1000} min={20} tabIndex={0} />\n                <span className=\"slds-resizable__handle\">\n                  <span className=\"slds-resizable__divider\" />\n                </span>\n              </div>\n            </th>\n            }\n            { !hiddenCols.asset && \n            <th aria-label=\"Asset\" aria-sort=\"none\" className=\"slds-is-resizable slds-is-sortable\" scope=\"col\">\n              <a className=\"slds-th__action slds-text-link_reset\" href=\"javascript:void(0);\" role=\"button\" tabIndex={0}>\n                <span className=\"slds-assistive-text\">Sort by: </span>\n                <div className=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                  <span className=\"slds-truncate\" title=\"Asset\">Asset</span>\n                  <span className=\"slds-icon_container slds-icon-utility-arrowdown\">\n                    <svg className=\"slds-icon slds-icon-text-default slds-is-sortable__icon \" aria-hidden=\"true\">\n                      <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#arrowdown\" />\n                    </svg>\n                  </span>\n                </div>\n              </a>\n              <div className=\"slds-resizable\">\n                <input type=\"range\" aria-label=\"Contact column width\" className=\"slds-resizable__input slds-assistive-text\" id=\"cell-resize-handle-539\" max={1000} min={20} tabIndex={0} />\n                <span className=\"slds-resizable__handle\">\n                  <span className=\"slds-resizable__divider\" />\n                </span>\n              </div>\n            </th>\n            }\n\n            <th className scope=\"col\" style={{width: '3.25rem'}}>\n              <div className=\"slds-truncate slds-assistive-text\" title=\"Actions\">Actions</div>\n            </th>\n\n          </tr>\n        </thead>\n        <tbody>\n          {\n            data.map((e,i) => <DataRow hiddenCols={hiddenCols} toggleRowModal={toggleRowModal} editRow={editRow} deleteRow={deleteRow} index={i} {...e} key={i} />)\n          }\n        </tbody>\n      </table>\n      <section className=\"slds-grid slds-grid_align-center slds-m-around_small\">\n        <Pager />\n      </section>\n    </Fragment>\n  )\n}\n\nexport default DataTable;","import React, { Fragment, useState } from 'react';\n\nconst Spinner = () => {\n\n\n  return(\n    <div className=\"demo-only\" style={{height: '6rem'}}>\n      <div className=\"slds-spinner_container\">\n        <div role=\"status\" className=\"slds-spinner slds-spinner_medium slds-spinner_brand\">\n          <span className=\"slds-assistive-text\">Loading</span>\n          <div className=\"slds-spinner__dot-a\" />\n          <div className=\"slds-spinner__dot-b\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Spinner;","import React, { Fragment, useState } from 'react';\n\nconst Modal = ({\n  toggleRowModal,\n  type,\n  values,\n  onSubmit,\n  idx\n}) => {\n\n  const [row, setRow] = useState({...values});\n\n  const handleCHange = e => setRow({...row, [e.target.name]: e.target.value});\n\n  return(\n    <Fragment>\n      <section role=\"dialog\" tabIndex={-1} aria-labelledby=\"modal-heading-01\" aria-modal=\"true\" aria-describedby=\"modal-content-id-1\" className=\"slds-modal slds-fade-in-open\">\n        <div className=\"slds-modal__container\">\n          <header className=\"slds-modal__header\">\n            <button onClick={() => toggleRowModal(false)} className=\"slds-button slds-button_icon slds-modal__close slds-button_icon-inverse\" title=\"Close\">\n              <svg className=\"slds-button__icon slds-button__icon_large\" aria-hidden=\"true\">\n                <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#close\" />\n              </svg>\n              <span className=\"slds-assistive-text\">Close</span>\n            </button>\n            <h2 id=\"modal-heading-01\" className=\"slds-modal__title slds-hyphenate\">{type === 'edit' ? 'Edit' : 'New'} row</h2>\n          </header>\n          <div className=\"slds-modal__content slds-p-around_medium\">\n            <form onSubmit={e => onSubmit(e, row, idx)}>\n              <div className=\"slds-form-element\">\n                <label className=\"slds-form-element__label\">Theme</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} defaultValue={row.theme} className=\"slds-input\" name=\"theme\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Program</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} defaultValue={row.program} className=\"slds-input\" name=\"program\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Title</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} defaultValue={row.title} className=\"slds-input\" name=\"title\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Format</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} defaultValue={row.format} className=\"slds-input\" name=\"format\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Persona</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} defaultValue={row.persona} className=\"slds-input\" name=\"persona\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Abstract</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} defaultValue={row.abstract} className=\"slds-input\" name=\"abstract\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Region</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} defaultValue={row.region} className=\"slds-input\" name=\"region\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Start date</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"date\" onChange={handleCHange} defaultValue={row.startDate} className=\"slds-input\" name=\"startDate\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">End date</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"date\" onChange={handleCHange} defaultValue={row.endDate} className=\"slds-input\" name=\"endDate\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Results</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} defaultValue={row.results} className=\"slds-input\" name=\"results\" />\n                </div>\n              </div>\n              <div className=\"slds-form-element slds-m-top_x-small\">\n                <label className=\"slds-form-element__label\">Asset</label>\n                <div className=\"slds-form-element__control\">\n                  <input type=\"text\" onChange={handleCHange} defaultValue={row.asset} className=\"slds-input\" name=\"asset\" />\n                </div>\n              </div>\n              <div class=\"slds-m-top_small\">\n                <button onClick={() => toggleRowModal(false)} className=\"slds-button slds-button_neutral\">Cancel</button>\n                <button type=\"submit\" className=\"slds-button slds-button_brand\">{type === 'edit' ? 'Edit' : 'Create'} row</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n      <div className=\"slds-backdrop slds-backdrop_open\" />\n    </Fragment>\n  )\n}\n\nexport default Modal;","import React from 'react';\n\nconst Notification = ({\n  text\n}) => {\n  \n\n  return(\n    <div className=\"demo-only demo-only_viewport\">\n      <div className=\"slds-notification-container\">\n        <div aria-live=\"assertive\" aria-atomic=\"true\" className=\"slds-assistive-text\">Congratulations</div>\n        <section className=\"slds-notification\" role=\"dialog\" aria-labelledby=\"noti52\" aria-describedby=\"dialog-body-id-42\">\n          <div className=\"slds-notification__body\" id=\"dialog-body-id-42\">\n            <div className=\"slds-notification__target slds-media\">\n              <span className=\"slds-icon_container slds-media__figure\" title=\"event\">\n                <svg className=\"slds-button__icon\" aria-hidden=\"true\">\n                  <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#notification\" />\n                </svg>\n              </span>\n              <div className=\"slds-media__body\">\n                <h2 className=\"slds-text-heading_small slds-m-bottom_xx-small\" id=\"noti52\">\n                  <span className=\"slds-assistive-text\">Notification:</span>Congratulations</h2>\n                <p>{text}</p>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport default Notification;","import React from 'react';\n\nconst ProgressBar = ({\n  progress\n}) => {\n  \n  return(\n    <div className=\"slds-progress-bar\" aria-valuemin={0} aria-valuemax={100} aria-valuenow={progress} role=\"progressbar\">\n      <span className=\"slds-progress-bar__value slds-progress-bar__value_success\" style={{width: `${progress}%`}}>\n        <span className=\"slds-assistive-text\">Progress: {progress}%</span>\n      </span>\n    </div>\n  )\n}\n\nexport default ProgressBar;","import React from 'react';\n\nconst Alert = ({\n    text,\n    type,\n    icon,\n    handleAlert\n}) => {\n  \n\n  return(\n    <div className={`slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_${type}`} role=\"alert\">\n        <span className=\"slds-assistive-text\">{type}</span>\n        <span className=\"slds-icon_container slds-icon-utility-error slds-m-right_x-small\" title={text}>\n          <svg className=\"slds-icon slds-icon_x-small\" aria-hidden=\"true\">\n            <use xlinkHref={`/assets/icons/utility-sprite/svg/symbols.svg#${icon}`} />\n          </svg>\n        </span>\n        <h2>{text}</h2>\n        <div className=\"slds-notify__close\">\n          <button onClick={() => handleAlert(false)} className=\"slds-button slds-button_icon slds-button_icon-small slds-button_icon-inverse\" title=\"Close\">\n            <svg className=\"slds-button__icon\" aria-hidden=\"true\">\n              <use xlinkHref=\"/assets/icons/utility-sprite/svg/symbols.svg#close\" />\n            </svg>\n            <span className=\"slds-assistive-text\">Close</span>\n          </button>\n        </div>\n      </div>\n  )\n}\n\nexport default Alert;","import React, { useState, useEffect } from 'react';\nimport dummydata from '../../utils/data';\n\nimport Nav from '../../components/Nav';\nimport DataTable from '../../components/DataTable';\nimport Spinner from '../../components/Spinner';\nimport Modal from '../../components/Modal';\nimport Notification from '../../components/Notification';\nimport Alert  from '../../components/Alert';\nimport ProgressBar  from '../../components/ProgressBar';\n\nconst Mandatory = () => {\n\n  let [loading, setLoading] = useState(true);\n  let [data, setData] = useState(dummydata);\n  let [notification, setNotification] = useState({active: false})\n  let [progress, setProgress] = useState({active: false, percentage: 0});\n  let [alert, setAlert] = useState({active: false, text: '', type: '', icon: ''});\n\n  let hiddenColums = {\n    theme: false,\n    program: false,\n    title: false,\n    format: false,\n    persona: false,\n    abstract: false,\n    startDate: false,\n    endDate: false,\n    results: false,\n    asset: false,\n  };\n\n  useEffect(() => {\n    handleLoad();\n  }, [data]);\n  \n  let [modal, setModal] = useState({\n    active: false\n  });\n\n  const handleLoad = () => {\n    setTimeout(() => {\n      setLoading(false)\n    }, 1000)\n  }\n\n  const addRow = (e, row) => {\n    e.preventDefault();\n    setData([...data, row]);\n    toggleRowModal(false);\n    showNotification('New row created satisfactorily.')\n  }\n\n  const editRow = (e, row, i) => {\n    e.preventDefault();\n    let editData = data;\n    editData.splice(i, 1, row);\n    setData(editData);\n    toggleRowModal(false);\n    showNotification('New row edited satisfactorily.');\n  }\n\n  const deleteRow = i => {\n    let filterData = data.filter((row, idx) => idx !== i);\n    setData(filterData);\n  }\n\n  const toggleRowModal = (active, onSubmit, values, type, idx) => {\n    setModal(prev => {\n      return {values, type, active, onSubmit, idx}\n    });\n  }\n\n  const showNotification = (text) => {\n    setNotification({active: true, text});\n    setTimeout(() => {\n      setNotification({active: false});\n    }, 5000)\n  }\n\n  const handleAlert = (active, text, type, icon) => {\n    setAlert({active, text, type, icon});\n    setInterval(() => {\n      setAlert({active: false, text: '', type: '', icon: ''});\n    }, 7000);\n  }\n\n  const handleProgress = () => {\n    setProgress({active: true});\n    let interval = setInterval(() => {\n      setProgress({active: true, percentage: progress.percentage++});\n      if(progress.percentage === 101) {\n        setProgress({active: false, percentage: 0});\n        handleAlert(true, \"CSV file Uploaded successfully\", \"success\", \"success\");\n        clearInterval(interval);\n      }\n    }, 20);\n  }\n\n  if(loading) {\n    return <Spinner />\n  } else {\n    return(\n      <section class=\"slds-grid slds-wrap\">\n      {modal.active && <Modal onSubmit={modal.onSubmit} values={modal.values} idx={modal.idx} type={modal.type} toggleRowModal={toggleRowModal} />}\n      {notification.active && <Notification text={notification.text} />}\n      <Nav handleAlert={handleAlert} addFile={handleProgress} addRow={addRow} toggleRowModal={toggleRowModal} />\n      {alert.active && <Alert handleAlert={handleAlert} text={alert.text} type={alert.type} icon={alert.icon} />}\n      {progress.active && <ProgressBar progress={progress.percentage} />}\n      <div class=\"slds-grid slds-wrap slds-p-around_medium slds_full-width\">\n        <div class=\"slds-col slds-size_12-of-12\">\n          {\n            data.length > 0 ?\n              <DataTable\n                toggleRowModal={toggleRowModal}\n                data={data}\n                deleteRow={deleteRow}\n                editRow={editRow}\n                hiddenCols={hiddenColums}\n              /> : (\n                <div className=\"slds-admin-view\">\n                  <img src=\"/assets/images/product4.png\" alt=\"Salesforce character\"/>\n                  <h2 class=\"slds-text-heading_large slds-text-align_center\">It looks like there's nothing here yet.</h2>\n                  <div class=\"slds-m-vertical_medium\">\n                    <p class=\"slds-text-align_center\">Let's get this party started by building your first form!</p>\n                    <p class=\"slds-text-align_center\">click below to kick things off.</p>\n                  </div>\n                  <ul className=\"slds-button-group-row slds-m-top_x-small\">\n                    <li className=\"slds-button-group-item\">\n                      <div className=\"slds-form-element__control\">\n                        <div className=\"slds-file-selector slds-file-selector_files\">\n                          <input onChange={handleProgress} type=\"file\" className=\"slds-file-selector__input slds-assistive-text\" accept=\"image/png\" id=\"file-upload-input-01\" aria-labelledby=\"file-selector-primary-label file-selector-secondary-label\" />\n                          <label className=\"slds_cursor-pointer slds-button slds-button_brand\" htmlFor=\"file-upload-input-01\" id=\"file-selector-secondary-label\"  title=\"Upload CSV\">\n                            Upload CSV file\n                          </label>\n                        </div>\n                      </div>\n                    </li>\n                    <li className=\"slds-button-group-item\">\n                      <button onClick={() => toggleRowModal(true, addRow)} className=\"slds-button slds-button_neutral\">Create a row</button>\n                    </li>\n                  </ul>\n                </div>\n              )\n          }\n        </div>\n      </div>\n      </section>\n    )\n  }\n}\n\nexport default Mandatory;","import React, { useState, useEffect } from 'react';\nimport dummydata from '../../utils/data';\n\nimport Nav from '../../components/Nav';\nimport DataTable from '../../components/DataTable';\nimport Spinner from '../../components/Spinner';\nimport Modal from '../../components/Modal';\nimport Notification from '../../components/Notification';\nimport Alert  from '../../components/Alert';\nimport ProgressBar  from '../../components/ProgressBar';\n\nconst Mandatory = () => {\n\n  let [loading, setLoading] = useState(true);\n  let [data, setData] = useState(dummydata);\n  let [notification, setNotification] = useState({active: false})\n  let [progress, setProgress] = useState({active: false, percentage: 0});\n  let [alert, setAlert] = useState({active: false, text: '', type: '', icon: ''});\n\n  let hiddenColums = {\n    theme: false,\n    program: false,\n    title: false,\n    format: false,\n    persona: false,\n    abstract: false,\n    startDate: false,\n    endDate: false,\n    results: false,\n    asset: false,\n  };\n\n  useEffect(() => {\n    handleLoad();\n  }, [data]);\n  \n  let [modal, setModal] = useState({\n    active: false\n  });\n\n  const handleLoad = () => {\n    setTimeout(() => {\n      setLoading(false)\n    }, 1000)\n  }\n\n  const addRow = (e, row) => {\n    e.preventDefault();\n    setData([...data, row]);\n    toggleRowModal(false);\n    showNotification('New row created satisfactorily.')\n  }\n\n  const editRow = (e, row, i) => {\n    e.preventDefault();\n    let editData = data;\n    editData.splice(i, 1, row);\n    setData(editData);\n    toggleRowModal(false);\n    showNotification('New row edited satisfactorily.');\n  }\n\n  const deleteRow = i => {\n    let filterData = data.filter((row, idx) => idx !== i);\n    setData(filterData);\n  }\n\n  const toggleRowModal = (active, onSubmit, values, type, idx) => {\n    setModal(prev => {\n      return {values, type, active, onSubmit, idx}\n    });\n  }\n\n  const showNotification = (text) => {\n    setNotification({active: true, text});\n    setTimeout(() => {\n      setNotification({active: false});\n    }, 5000)\n  }\n\n  const handleAlert = (active, text, type, icon) => {\n    setAlert({active, text, type, icon});\n    setInterval(() => {\n      setAlert({active: false, text: '', type: '', icon: ''});\n    }, 7000);\n  }\n\n  const handleProgress = () => {\n    setProgress({active: true});\n    let interval = setInterval(() => {\n      setProgress({active: true, percentage: progress.percentage++});\n      if(progress.percentage === 101) {\n        setProgress({active: false, percentage: 0});\n        handleAlert(true, \"CSV file Uploaded successfully\", \"success\", \"success\");\n        clearInterval(interval);\n      }\n    }, 20);\n  }\n\n  if(loading) {\n    return <Spinner />\n  } else {\n    return(\n      <section class=\"slds-grid slds-wrap\">\n      {modal.active && <Modal onSubmit={modal.onSubmit} values={modal.values} idx={modal.idx} type={modal.type} toggleRowModal={toggleRowModal} />}\n      {notification.active && <Notification text={notification.text} />}\n      <Nav handleAlert={handleAlert} addFile={handleProgress} addRow={addRow} toggleRowModal={toggleRowModal} />\n      {alert.active && <Alert handleAlert={handleAlert} text={alert.text} type={alert.type} icon={alert.icon} />}\n      {progress.active && <ProgressBar progress={progress.percentage} />}\n      <div class=\"slds-grid slds-wrap slds-p-around_medium slds_full-width\">\n        <div class=\"slds-col slds-size_12-of-12\">\n          {\n            data.length > 0 ?\n              <DataTable\n                toggleRowModal={toggleRowModal}\n                data={data}\n                deleteRow={deleteRow}\n                editRow={editRow}\n                hiddenCols={hiddenColums}\n              /> : (\n                <div className=\"slds-admin-view\">\n                  <img src=\"/assets/images/product4.png\" alt=\"Salesforce character\"/>\n                  <h2 class=\"slds-text-heading_large slds-text-align_center\">It looks like there's nothing here yet.</h2>\n                  <div class=\"slds-m-vertical_medium\">\n                    <p class=\"slds-text-align_center\">Let's get this party started by building your first form!</p>\n                    <p class=\"slds-text-align_center\">click below to kick things off.</p>\n                  </div>\n                  <ul className=\"slds-button-group-row slds-m-top_x-small\">\n                    <li className=\"slds-button-group-item\">\n                      <div className=\"slds-form-element__control\">\n                        <div className=\"slds-file-selector slds-file-selector_files\">\n                          <input onChange={handleProgress} type=\"file\" className=\"slds-file-selector__input slds-assistive-text\" accept=\"image/png\" id=\"file-upload-input-01\" aria-labelledby=\"file-selector-primary-label file-selector-secondary-label\" />\n                          <label className=\"slds_cursor-pointer slds-button slds-button_brand\" htmlFor=\"file-upload-input-01\" id=\"file-selector-secondary-label\"  title=\"Upload CSV\">\n                            Upload CSV file\n                          </label>\n                        </div>\n                      </div>\n                    </li>\n                    <li className=\"slds-button-group-item\">\n                      <button onClick={() => toggleRowModal(true, addRow)} className=\"slds-button slds-button_neutral\">Create a row</button>\n                    </li>\n                  </ul>\n                </div>\n              )\n          }\n        </div>\n      </div>\n      </section>\n    )\n  }\n}\n\nexport default Mandatory;","import React, { useState, useEffect } from 'react';\nimport dummydata from '../../utils/data';\n\nimport Nav from '../../components/Nav';\nimport DataTable from '../../components/DataTable';\nimport Spinner from '../../components/Spinner';\nimport Modal from '../../components/Modal';\nimport Notification from '../../components/Notification';\nimport Alert  from '../../components/Alert';\nimport ProgressBar  from '../../components/ProgressBar';\n\nconst Mandatory = () => {\n\n  let [loading, setLoading] = useState(true);\n  let [data, setData] = useState(dummydata);\n  let [notification, setNotification] = useState({active: false})\n  let [progress, setProgress] = useState({active: false, percentage: 0});\n  let [alert, setAlert] = useState({active: false, text: '', type: '', icon: ''});\n\n  let hiddenColums = {\n    theme: false,\n    program: false,\n    title: false,\n    format: false,\n    persona: false,\n    abstract: false,\n    startDate: true,\n    endDate: true,\n    results: true,\n    asset: true,\n  };\n\n  useEffect(() => {\n    handleLoad();\n  }, [data]);\n  \n  let [modal, setModal] = useState({\n    active: false\n  });\n\n  const handleLoad = () => {\n    setTimeout(() => {\n      setLoading(false)\n    }, 2000)\n  }\n\n  const addRow = (e, row) => {\n    e.preventDefault();\n    setData([...data, row]);\n    toggleRowModal(false);\n    showNotification('New row created satisfactorily.')\n  }\n\n  const editRow = (e, row, i) => {\n    e.preventDefault();\n    let editData = data;\n    editData.splice(i, 1, row);\n    setData(editData);\n    toggleRowModal(false);\n    showNotification('New row edited satisfactorily.');\n  }\n\n  const deleteRow = i => {\n    let filterData = data.filter((row, idx) => idx !== i);\n    setData(filterData);\n  }\n\n  const toggleRowModal = (active, onSubmit, values, type, idx) => {\n    setModal(prev => {\n      return {values, type, active, onSubmit, idx}\n    });\n  }\n\n  const showNotification = (text) => {\n    setNotification({active: true, text});\n    setTimeout(() => {\n      setNotification({active: false});\n    }, 5000)\n  }\n\n  const handleAlert = (active, text, type, icon) => {\n    setAlert({active, text, type, icon});\n    setInterval(() => {\n      setAlert({active: false, text: '', type: '', icon: ''});\n    }, 7000);\n  }\n\n  const handleProgress = () => {\n    setProgress({active: true});\n    let interval = setInterval(() => {\n      setProgress({active: true, percentage: progress.percentage++});\n      if(progress.percentage === 101) {\n        setProgress({active: false, percentage: 0});\n        handleAlert(true, \"CSV file Uploaded successfully\", \"success\", \"success\");\n        clearInterval(interval);\n      }\n    }, 20);\n  }\n\n  if(loading) {\n    return <Spinner />\n  } else {\n    return(\n      <section class=\"slds-grid slds-wrap\">\n      {modal.active && <Modal onSubmit={modal.onSubmit} values={modal.values} idx={modal.idx} type={modal.type} toggleRowModal={toggleRowModal} />}\n      {notification.active && <Notification text={notification.text} />}\n      <Nav handleAlert={handleAlert} addFile={handleProgress} addRow={addRow} toggleRowModal={toggleRowModal} />\n      {alert.active && <Alert handleAlert={handleAlert} text={alert.text} type={alert.type} icon={alert.icon} />}\n      {progress.active && <ProgressBar progress={progress.percentage} />}\n      <div class=\"slds-grid slds-wrap slds-p-around_medium slds_full-width\">\n        <div class=\"slds-col slds-size_12-of-12\">\n          {\n            data.length > 0 ?\n              <DataTable\n                toggleRowModal={toggleRowModal}\n                data={data}\n                deleteRow={deleteRow}\n                editRow={editRow}\n                hiddenCols={hiddenColums}\n              /> : (\n                <div className=\"slds-admin-view\">\n                  <img src=\"/assets/images/product4.png\" alt=\"Salesforce character\"/>\n                  <h2 class=\"slds-text-heading_large slds-text-align_center\">It looks like there's nothing here yet.</h2>\n                  <div class=\"slds-m-vertical_medium\">\n                    <p class=\"slds-text-align_center\">Let's get this party started by building your first form!</p>\n                    <p class=\"slds-text-align_center\">click below to kick things off.</p>\n                  </div>\n                  <ul className=\"slds-button-group-row slds-m-top_x-small\">\n                    <li className=\"slds-button-group-item\">\n                      <div className=\"slds-form-element__control\">\n                        <div className=\"slds-file-selector slds-file-selector_files\">\n                          <input onChange={handleProgress} type=\"file\" className=\"slds-file-selector__input slds-assistive-text\" accept=\"image/png\" id=\"file-upload-input-01\" aria-labelledby=\"file-selector-primary-label file-selector-secondary-label\" />\n                          <label className=\"slds_cursor-pointer slds-button slds-button_brand\" htmlFor=\"file-upload-input-01\" id=\"file-selector-secondary-label\"  title=\"Upload CSV\">\n                            Upload CSV file\n                          </label>\n                        </div>\n                      </div>\n                    </li>\n                    <li className=\"slds-button-group-item\">\n                      <button onClick={() => toggleRowModal(true, addRow)} className=\"slds-button slds-button_neutral\">Create a row</button>\n                    </li>\n                  </ul>\n                </div>\n              )\n          }\n        </div>\n      </div>\n      </section>\n    )\n  }\n}\n\nexport default Mandatory;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Login from './containers/Login';\nimport Admin from './containers/Admin';\nimport Mandatory1 from './containers/Mandatory1';\nimport Mandatory2 from './containers/Mandatory2';\nimport Mandatory3 from './containers/Mandatory3';\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route exact path='/' component={Login} />\n      <Route exact path='/admin' component={Mandatory1} />\n      <Route exact path='/mandatory-1' component={Mandatory1} />\n      <Route exact path='/mandatory-2' component={Mandatory2} />\n      <Route exact path='/mandatory-3' component={Mandatory3} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}